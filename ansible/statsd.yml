---
- hosts: all
  sudo: yes
  vars:
    statsd_npm_package_name: "git://github.com/etsy/statsd.git#4fe6aab65d9a35854b98ca365592286c9e702480"
    statsd_backends:
      - ./backends/repeater
    statsd_graphite:
      legacyNamespace: true
    statsd_support_tcp_repeater: true
    statsd_additional_options:
      repeater:
        tcp:
          enabled: true
          debug: true
          maxConnections: 10
          host: "internal-metrics.vandelay.io"
          port: 8125
  roles:
    - role: statsd

  tasks:
    - meta: flush_handlers

    - name: Ubuntu | Install dependencies
      when: ansible_os_family == 'Debian'
      apt: name="{{ item }}" state=present
      with_items:
        - git-core
        - curl
        - build-essential
        - openssl
        - libssl-dev
        - ruby-dev
        - gcc

    - name: Install fpm gem
      gem: name=fpm state=latest

    - name: Stop running statsd
      service: name=statsd state=stopped

    - name: Does statsd configuration exist?
      stat: path=/etc/init/statsd.conf
      register: statsd_conf

    - name: Move statsd upstart configuration, if it exists
      command: mv /etc/init/statsd.conf /opt/statsd/statsd
      when: statsd_conf.stat.exists

    - name: Make fpm
      shell:
        fpm -s dir -t deb
            -p /vagrant/packages
            -n balanced-statsd-relayer
            --provides balanced-statsd-relayer
            -m mahmoud@balancedpayments.com
            --vendor dev@balancedpayments.com
            --license MIT/BSD
            -d 'nodejs >= 0.10.0'
            --url 'https://github.com/balanced-ops'
            --deb-upstart /opt/statsd/statsd
            --description 'Balanced modification of statsd that allows a
                           local udp server with a tcp relay to our internal
                           metrics service'
            /opt/statsd


#    -t OUTPUT_TYPE                the type of package you want to create (deb, rpm, solaris, etc)
#    -s INPUT_TYPE                 the package type to use as input (gem, rpm, python, etc)
#    -C CHDIR                      Change directory to here before searching for files
#    --prefix PREFIX               A path to prefix files with when building the target package. This may be necessary for all input packages. For example, the 'gem' type will prefix with your gem directory automatically.
#    -p, --package OUTPUT          The package file path to output.
#    -f, --force                   Force output even if it will overwrite an existing file (default: false)
#    -n, --name NAME               The name to give to the package